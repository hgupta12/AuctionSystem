version: '3'
services:
  redis:
    image: "redis/redis-stack:latest"
    container_name: "redis"
    ports:
      - "6379:6379"
      - "8001:8001"

  zookeeper:
      image: wurstmeister/zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "auction:1:1"
    depends_on:
      - zookeeper

  mongodb:
    image: "mongo:latest"
    container_name: "mongodb"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "example"
    volumes:
      - data:/data/db

  mongo-express:
    image: "mongo-express:latest"
    restart: always
    container_name: "mongo-express"
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongodb"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "root"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "example"
    depends_on:
      - mongodb

volumes:
  data: